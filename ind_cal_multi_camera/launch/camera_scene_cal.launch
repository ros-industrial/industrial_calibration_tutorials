<?xml version="1.0" ?>
<launch>

   <!-- arguments for this file -->
   <arg name="gui" default="False" />
   <arg name="robot1" default="camera_scene" />
   <arg name="xacro_model" default="$(find ind_cal_multi_camera)/urdf/camera_scene.xacro" />

   <!-- Launch the basler camera nodes -->
<!-- Basler camera node   -->
  <node pkg="aravis_camera_driver" type="aravis_camera_node" name="aravis_camera_node">
    <param name="camera_id" value="Basler-21499591"/>
    <param name="pixel_format" value="bayer_bggr8"/>
    <param name="exposure_mode" value="auto_once"/>
    <param name="exposure_time" value="1000"/>
    <param name="auto_white_balance_once" value="true"/>
    <param name="gain_mode" value="auto_once"/>
    <param name="gain" value="0"/>
    <param name="digital_shift" value="0"/>
    <param name="mtu" value="1500"/>
    <param name="bin_x" value="1"/>
    <param name="bin_y" value="1"/>
    <param name="roi_x" value="0"/>
    <param name="roi_y" value="0"/>
    <param name="roi_width" value="1624"/>
    <param name="roi_height" value="1234"/>
    <param name="frame_rate" value="30"/>
  </node>

   <!-- Launch the asus camera nodes -->
  <!-- Bus 2, device 1-->
  <include file="$(find ind_cal_multi_camera)/launch/kinect_cal.launch" >
    <arg name="topic_ns" value="asus1" />
    <arg name="tf_prefix" value="asus1" />
    <arg name="cal_prefix" value="1" />
    <arg name="device_id" value="2@1" />
    <arg name="publish_tf" value="false" />
  </include>

  <!-- Bus 2, device 1-->
  <include file="$(find ind_cal_multi_camera)/launch/kinect_cal.launch" >
    <arg name="topic_ns" value="asus2" />
    <arg name="tf_prefix" value="asus2" />
    <arg name="cal_prefix" value="2" />
    <arg name="device_id" value="3@1" />
    <arg name="publish_tf" value="false" />
  </include>


   <!-- Launch the extrinsic calibration service -->
   <node pkg="industrial_extrinsic_cal" type="service_node" name="calibration_service_node" output="screen" >
     <param name="yaml_file_path" value="$(find ind_cal_multi_camera)/yaml/" />
     <rosparam>
       camera_file: "camera_scene_cameras.yaml"
       target_file: "camera_scene_targets.yaml"
       cal_job_file: "camera_scene_caljob.yaml"
       store_results_package_name: "ind_cal_multi_camera"
       store_results_file_name: "camera_scene_transforms.launch"
     </rosparam>
   </node> 

   <!-- Load the xacro file of the tower and cameras onto the parameter server as a robot description -->
   <param name="$(arg robot1)/robot_description" command="$(find xacro)/xacro.py $(arg xacro_model)" />
   <param name="use_gui" value="$(arg gui)" />

   <!-- Launch robot state publishers for scene -->
   <node ns="$(arg robot1)" name="camera_scene_state_publisher" pkg="robot_state_publisher" type="state_publisher" >
            <!--param name="tf_prefix" value="" /-->
            <param name="publish_frequency" value="50" />
    </node>

   <!-- Launch Rviz -->
   <node name="rviz" pkg="rviz" type="rviz" args="-d $(find ind_cal_multi_camera)/camera_scene.rviz"/>

   <!-- Launch mutable joint state publisher for calibratable transforms -->
   <node  name="camera_locs" pkg="industrial_extrinsic_cal" type="mutable_joint_state_publisher" >
       <param name="mutable_joint_state_yaml_file" value="$(find ind_cal_multi_camera)/yaml/camera_scene_mutable_joint_states.yaml" />
       <remap from="mutable_joint_states" to="$(arg robot1)/joint_states" />
   </node>

   <node name="cal_gui" pkg="calibrate_gui" type="calibrate_gui" />

</launch>
